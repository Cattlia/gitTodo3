@page "/"
@using todo3.Models
@inject IJSRuntime JSRuntime  <!-- Place the @inject directive here -->

<div class="container mt-5">
    <h3 class="text-center">Todo3 List</h3>
    <div class="row mb-3">
        <div class="col">
            <input @bind="newTodoTitle" class="form-control" placeholder="Add new todo..." />
        </div>
        <div class="col-auto">
            <button class="btn btn-primary" @onclick="AddTodo">Add</button>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this todo?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" @onclick="ConfirmDelete">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <h4>Active Tasks</h4>
    <ul class="list-group mb-4">
        @foreach (var todo in todos)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                    <input type="checkbox" @bind="todo.IsCompleted" />
                    <span class="@(todo.IsCompleted ? "text-decoration-line-through" : "")">@todo.Title</span>
                </div>
                <button class="btn btn-danger btn-sm" @onclick="() => ShowDeleteConfirmation(todo)">Delete</button>
            </li>
        }
    </ul>

    <h4>Completed Tasks</h4>
    <ul class="list-group">
        @foreach (var todo in todos.Where(t => t.IsCompleted))
        {
            <li class="list-group-item">@todo.Title</li>
        }
    </ul>
</div>

@code {
    private List<TodoItem> todos = new List<TodoItem>();
    private string newTodoTitle = string.Empty;
    private TodoItem todoToDelete;

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodoTitle))
        {
            todos.Add(new TodoItem { Title = newTodoTitle, IsCompleted = false });
            newTodoTitle = string.Empty;
        }
    }

    private async Task ShowDeleteConfirmation(TodoItem todo)
    {
        todoToDelete = todo; // Set the todo item to delete
        await JSRuntime.InvokeVoidAsync("eval", "$('#deleteConfirmationModal').modal('show');"); // Show modal
    }

    private async Task ConfirmDelete()
    {
        if (todoToDelete != null)
        {
            todos.Remove(todoToDelete);
            todoToDelete = null; // Reset the reference
        }
        // Hide the modal after deletion
        await JSRuntime.InvokeVoidAsync("eval", "$('#deleteConfirmationModal').modal('hide');"); // Hide modal
    }
}
